# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
# image: python:latest
image: python:2

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
services:
  - mariadb:latest
  - postgres:latest

variables:
  POSTGRES_DB: database_name
  POSTGRES_HOST_AUTH_METHOD: trust
  MYSQL_ROOT_PASSWORD: DBPASS

# This folder is cached between builds
# http://docs.gitlab.com/ee/ci/yaml/README.html#cache
cache:
  paths:
    - ~/.cache/pip/

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - python -V  # Print out python version for debugging
  # Uncomment next line if your Django app needs a JS runtime:
  # - apt-get update -q && apt-get install nodejs -yqq
  - pip install -U pip
  - sed -i '/libevent/d' fhs/usr/share/python/syncwerk/restapi/requirements.txt
  - pip install -r fhs/usr/share/python/syncwerk/restapi/requirements.txt
  - pip install coverage
  - git clone https://github.com/syncwerk/syncwerk-server-ccnet.git
  - cp -a syncwerk-server-ccnet/fhs/etc/* /etc
  - git clone https://github.com/syncwerk/syncwerk-server-daemon.git
  - cp -a syncwerk-server-daemon/fhs/etc/* /etc
  - mkdir /var/log/syncwerk


# To get Django tests to work you may need to create a settings file using
# the following DATABASES:
#
# DATABASES = {
#     'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'ci',
#        'USER': 'postgres',
#        'PASSWORD': 'postgres',
#        'HOST': 'postgres',
#        'PORT': '5432',
#    },
# }
#
# and then adding `--settings app.settings.ci` (or similar) to the test command

test:
  variables:
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
  script:
    - export CONFIG_DIR=/etc/syncwerk
    - export CCNET_CONF_DIR=${CONFIG_DIR}
    - export SYNCWERK_CONF_DIR=${CONFIG_DIR}
    - export SYNCWERK_CENTRAL_CONF_DIR=${CONFIG_DIR}
    - export RESTAPI_DIR=/usr/share/python/syncwerk/restapi
    - export DJANGO_SETTINGS_MODULE=restapi.settings_ci
    - export RESTAPI_LOG_DIR=/var/log/syncwerk
    - export TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
    - export OBJECT_STORAGE_PATH="/var/lib/syncwerk"
    - export LIBEVENT_ROOT="/usr/lib/syncwerk/libevent"
    - cd fhs/usr/share/python/syncwerk/restapi/
    - coverage run manage.py test
    - coverage html -d coverage
    - coverage xml
  artifacts:
    reports:
      cobertura: fhs/usr/share/python/syncwerk/restapi/coverage.xml
    paths:
      - fhs/usr/share/python/syncwerk/restapi/coverage
